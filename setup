Here’s a **GitHub-ready README.md** you can copy *directly* into your repo with all correct markdown and proper GitHub style, using fenced code blocks, headings, lists, and tables for best appearance on GitHub:

```markdown
# 🛡️ Cybersecurity Home Lab with pfSense, Kali Linux, and Ubuntu

Simulate, analyze, and defend network attacks in this self-contained home lab environment using VirtualBox, pfSense, Kali Linux, and Ubuntu.

---

## 📌 Table of Contents

- [Introduction](#introduction)
- [Lab Goals](#lab-goals)
- [Benefits](#benefits)
- [Architecture Diagram](#architecture-diagram)
- [Requirements](#requirements)
- [Setup Overview](#setup-overview)
  - [pfSense](#pfsense-setup)
  - [Kali Linux](#kali-linux-setup)
  - [Ubuntu](#ubuntu-setup)
- [Attack Simulation](#attack-simulation)
- [Defense & Mitigation](#defense--mitigation)
- [Verifying Results](#verifying-results)
- [Lessons Learned](#lessons-learned)
- [References](#references)

---

## 🎯 Introduction

This project demonstrates a realistic cybersecurity home lab to practice defending a network against a simulated Denial-of-Service (DoS) attack. It uses:

- **pfSense** as a network firewall
- **Kali Linux** as the attacker
- **Ubuntu Desktop** as the victim
- **Wireshark** for packet capture

You will configure, monitor, attack, and defend a network environment in a fully isolated VirtualBox setup — a perfect playground for cybersecurity skills.

---

## 🎯 Lab Goals

✅ Understand network segmentation and routing  
✅ Practice configuring firewall rules on pfSense  
✅ Simulate a DoS attack and detect it  
✅ Analyze traffic with Wireshark  
✅ Mitigate the attack using pfSense  
✅ Gain blue-team style experience in a safe environment

---

## 🚀 Benefits

- **Hands-on security skills** with real tools
- **Isolated lab**: safe to experiment
- **Realistic workflow**: like a SOC environment
- **Portfolio-ready project** to show to employers
- **Free**: uses open-source and community software
- **Repeatable**: practice different attack-defense scenarios

---

## 🗺️ Architecture Diagram

```

\[Home LAN (192.168.0.0/24)]
|
\[pfSense WAN - Bridged]
|
\[pfSense LAN - Internal LabNet 192.168.1.0/24]
\|                               |
\[Ubuntu Victim]              \[Kali Attacker]

````

| Device         | Interface     | IP address              | Role                   |
|----------------|---------------|-------------------------|------------------------|
| pfSense WAN    | vtnet0        | 192.168.0.x (DHCP)      | Connected to home LAN  |
| pfSense LAN    | vtnet1        | 192.168.1.1/24          | Gateway for LabNet     |
| Kali Linux     | eth0          | 192.168.0.200 (DHCP)    | External attacker      |
| Ubuntu         | eth0          | 192.168.1.100 (DHCP)    | Internal victim        |

---

## ⚙️ Requirements

**Software**

- VirtualBox 7.x or higher
- pfSense CE 2.7.x ISO
- Kali Linux latest ISO
- Ubuntu 22.04 Desktop ISO
- Wireshark

**Host machine**

- 8GB RAM minimum
- 40GB free disk
- Internet connectivity
- Administrative privileges (to manage bridged adapters)

---

## ⚙️ Setup Overview

### pfSense Setup

- 2 vCPU, 2GB RAM, 20GB dynamic disk  
- Adapter 1: Bridged (WAN)
- Adapter 2: Internal Network (LabNet)
- LAN: 192.168.1.1/24 with DHCP 192.168.1.100-199  
- WAN: DHCP from your home router
- Enable pfSense GUI on WAN by adding firewall rules for port 443
- Set a rule to allow temporary Kali access to Ubuntu to simulate an attack

### Kali Linux Setup

- 2 vCPU, 2GB RAM, 15GB disk
- Adapter 1: Bridged
- DHCP IP from home LAN (e.g. 192.168.0.200)
- Add route to LabNet:
  ```bash
  sudo ip route add 192.168.1.0/24 via <pfSense-WAN-IP>
````

Replace `<pfSense-WAN-IP>` with the real value.

### Ubuntu Setup

* 2 vCPU, 2GB RAM, 15GB disk
* Adapter 1: Internal Network (LabNet)
* DHCP IP from pfSense (e.g. 192.168.1.100)
* Test Internet connectivity

  ```bash
  ping -c3 google.com
  ```

---

## 🛠️ Attack Simulation

1. On Ubuntu, install Wireshark:

   ```bash
   sudo apt update && sudo apt install -y wireshark
   sudo wireshark &
   ```

   Capture on `eth0`.

2. On Kali, run an ICMP flood:

   ```bash
   sudo hping3 -1 --flood 192.168.1.100
   ```

   or SYN flood:

   ```bash
   sudo hping3 --flood -S -p 80 192.168.1.100
   ```

   Observe traffic spikes in Wireshark.

---

## 🛡️ Defense & Mitigation

* In pfSense:

  * Add a firewall rule:

    * **Action**: Block
    * **Source**: Kali IP (192.168.0.200)
    * **Destination**: 192.168.1.100
    * Enable logging
    * Description: Block Kali DoS
* Apply and save
* Wireshark on Ubuntu should show no more flood packets

Check pfSense logs:

```
Status > System Logs > Firewall
```

to verify the block rule fired.

---

## ✅ Verifying Results

* Traffic stops in Wireshark
* Ubuntu stays responsive for normal traffic
* pfSense shows logs of the blocked flood
* You have successfully defended the lab!

---

## 🎓 Lessons Learned

* pfSense is a powerful open-source firewall
* Segmentation is key in defensive architecture
* Logging is critical for incident response
* Safe virtual environments are essential for practice
* Hands-on simulation builds confidence for real-world security work

---

## 📚 References

* [pfSense Documentation](https://docs.netgate.com/pfsense/en/latest/)
* [Kali Linux Docs](https://www.kali.org/docs/)
* [Wireshark](https://www.wireshark.org/docs/)
* [VirtualBox Networking](https://www.virtualbox.org/manual/ch06.html)

---

## 🙌 Author

*Your Name Here*
[LinkedIn](https://linkedin.com/in/your-link) | [GitHub](https://github.com/your-github)

---

## 🔗 License

MIT License — for educational purposes.

---

> *Feel free to fork, modify, or build on top of this lab for your own studies or portfolios!*

```

---

✅ **Next steps:**
- Paste this into a `README.md` file in your GitHub repo  
- Add your screenshots into the repo’s `/images` folder  
- Link them in the README if you wish (`![alt text](images/screenshot1.png)`)  

If you’d like, I can help you add the *exact* screenshot placeholders next — just say **“yes, add screenshot sections”** and I’ll do that for you! 🚀
```
